/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package janath;

import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gav
 */
public class AdminDashboardForm extends javax.swing.JFrame {
    
    private String userid;
    private String username;
    private String name;
    private String user_type;

    /**
     */
    public AdminDashboardForm(String userid) {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.userid = userid;
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/course_registration", "root", "");
            
            String sql = "SELECT username, name, user_type FROM users WHERE id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, userid);
            
            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
                this.username = rs.getString("username");
                this.name = rs.getString("name");
                this.user_type = rs.getString("user_type");
                labelUsername.setText("Admin, " + this.name);
            }
            
            rs.close();
            stmt.close();
            conn.close();
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading user details: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        loadAllCourses();
        loadAllUsers();
    }
    
    private void loadAllUsers() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/course_registration", "root", "");
            String sql = "SELECT * from users";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) usersTable.getModel();
            model.setRowCount(0);
            
            while (rs.next()) {
                String uid = rs.getString("id");
                String username = rs.getString("username");
                String displayName = rs.getString("name");
                model.addRow(new Object[]{uid, username, displayName});
            }
            
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error loading courses: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    // Admin: Load all courses, show code, name, and current enrollment count
    private void loadAllCourses() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/course_registration", "root", "");
            String sql = "SELECT c.course_code, c.course_name, "
                    + "(SELECT COUNT(*) FROM registrations r WHERE r.course_id = c.id) AS enroll_count "
                    + "FROM courses c";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Course Code", "Course Name", "Enrolled Students"}
            );
            
            while (rs.next()) {
                String courseCode = rs.getString("course_code");
                String courseName = rs.getString("course_name");
                int enrollCount = rs.getInt("enroll_count");
                model.addRow(new Object[]{courseCode, courseName, enrollCount});
            }
            yourCourseTable.setModel(model);
            
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading courses: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelUsername = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        yourCourseTable = new javax.swing.JTable();
        dropCourseButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deleteUserButton = new javax.swing.JButton();
        editUserButton = new javax.swing.JButton();
        viewRegistrationsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        addCourseButton = new javax.swing.JButton();
        viewRegistrationsButton1 = new javax.swing.JButton();
        addCourseButton1 = new javax.swing.JButton();
        addCourseButton2 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(40, 139, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelUsername.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        labelUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUsername.setText("Welcome, Admin");

        yourCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Course Name"
            }
        ));
        jScrollPane1.setViewportView(yourCourseTable);

        dropCourseButton.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        dropCourseButton.setText("Delete Course");
        dropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropCourseButtonActionPerformed(evt);
            }
        });

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Username", "Display Name"
            }
        ));
        jScrollPane2.setViewportView(usersTable);

        jLabel1.setText("User Management");

        jLabel2.setText("Course Management");

        deleteUserButton.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        deleteUserButton.setText("Delete User");
        deleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserButtonActionPerformed(evt);
            }
        });

        editUserButton.setBackground(new java.awt.Color(40, 139, 204));
        editUserButton.setText("Edit User");
        editUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserButtonActionPerformed(evt);
            }
        });

        viewRegistrationsButton.setBackground(new java.awt.Color(40, 139, 204));
        viewRegistrationsButton.setText("View User Regs");
        viewRegistrationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRegistrationsButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(40, 139, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        addCourseButton.setBackground(new java.awt.Color(40, 139, 204));
        addCourseButton.setText("Add Course");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        viewRegistrationsButton1.setBackground(new java.awt.Color(40, 139, 204));
        viewRegistrationsButton1.setText("Generate Report");
        viewRegistrationsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRegistrationsButton1ActionPerformed(evt);
            }
        });

        addCourseButton1.setBackground(new java.awt.Color(40, 139, 204));
        addCourseButton1.setText("Add Announcement");
        addCourseButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButton1ActionPerformed(evt);
            }
        });

        addCourseButton2.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.default.focusColor"));
        addCourseButton2.setText("Refresh");
        addCourseButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCourseButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 544, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(dropCourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editUserButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewRegistrationsButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewRegistrationsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addCourseButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addCourseButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCourseButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(viewRegistrationsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewRegistrationsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropCourseButtonActionPerformed
        int selectedRow = yourCourseTable.getSelectedRow();
        
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a course to delete", "No Course Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String courseCode = (String) yourCourseTable.getValueAt(selectedRow, 0);
        String courseName = (String) yourCourseTable.getValueAt(selectedRow, 1);
        
        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete:\n" + courseCode + " - " + courseName + "?",
                "Confirm Delete Course",
                JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/course_registration", "root", "");
                
                String sql = "DELETE FROM courses WHERE course_code = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, courseCode);
                
                int rowsAffected = stmt.executeUpdate();
                
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Course dropped successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    loadAllCourses();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to drop course", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
                stmt.close();
                conn.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error dropping course: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_dropCourseButtonActionPerformed

    private void deleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserButtonActionPerformed
        int selectedRow = usersTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to delete", "No User Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String userId = (String) usersTable.getValueAt(selectedRow, 0);
        String username = (String) usersTable.getValueAt(selectedRow, 1);
        String displayName = (String) usersTable.getValueAt(selectedRow, 2);
        
        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete user:\n" + username + " (" + displayName + ")?",
                "Confirm Delete User",
                JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/course_registration", "root", "");
                String sql = "DELETE FROM users WHERE id = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, userId);
                int rowsAffected = stmt.executeUpdate();
                stmt.close();
                conn.close();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "User deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    loadAllUsers();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete user", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error deleting user: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteUserButtonActionPerformed

    private void editUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserButtonActionPerformed
        int selectedRow = usersTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to edit", "No User Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String userId = (String) usersTable.getValueAt(selectedRow, 0);
        String username = (String) usersTable.getValueAt(selectedRow, 1);
        String oldDisplayName = (String) usersTable.getValueAt(selectedRow, 2);
        
        String newDisplayName = JOptionPane.showInputDialog(this, "Edit display name for user '" + username + "':", oldDisplayName);
        if (newDisplayName != null && !newDisplayName.trim().isEmpty() && !newDisplayName.equals(oldDisplayName)) {
            try {
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/course_registration", "root", "");
                String sql = "UPDATE users SET name = ? WHERE id = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, newDisplayName.trim());
                stmt.setString(2, userId);
                int rowsAffected = stmt.executeUpdate();
                stmt.close();
                conn.close();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "User updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    loadAllUsers();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update user", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error updating user: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_editUserButtonActionPerformed

    private void viewRegistrationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRegistrationsButtonActionPerformed
        int selectedRow = usersTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to edit", "No User Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String userId = (String) usersTable.getValueAt(selectedRow, 0);
        ViewUserRegistrationsForm form = new ViewUserRegistrationsForm(userId);
        form.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        form.setVisible(true);
    }//GEN-LAST:event_viewRegistrationsButtonActionPerformed

    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        AddCourseForm addCourseForm = new AddCourseForm(userid);
        addCourseForm.setVisible(true);
    }//GEN-LAST:event_addCourseButtonActionPerformed

    private void viewRegistrationsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRegistrationsButton1ActionPerformed
        java.util.List<String> headers = java.util.Arrays.asList("ID", "Username", "Display Name", "Role");
        java.util.List<java.util.List<String>> rows = new java.util.ArrayList<>();
        try {
            java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/course_registration", "root", "");
            String sql = "SELECT id, username, name, user_type FROM users";
            java.sql.PreparedStatement stmt = conn.prepareStatement(sql);
            java.sql.ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                java.util.List<String> row = new java.util.ArrayList<>();
                row.add(rs.getString("id"));
                row.add(rs.getString("username"));
                row.add(rs.getString("name"));
                row.add(rs.getString("user_type"));
                rows.add(row);
            }
            rs.close();
            stmt.close();
            conn.close();
            String filePath = System.getProperty("user.home") + "/Desktop/UserReport.pdf";
        } catch (Exception e) {
        }
    }//GEN-LAST:event_viewRegistrationsButton1ActionPerformed

    private void addCourseButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButton1ActionPerformed
        AddAnnouncementForm form = new AddAnnouncementForm(userid);
        form.setVisible(true);
    }//GEN-LAST:event_addCourseButton1ActionPerformed

    private void addCourseButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButton2ActionPerformed
        DefaultTableModel table = (DefaultTableModel) this.yourCourseTable.getModel();
        table.setRowCount(0);
        this.loadAllCourses();
    }//GEN-LAST:event_addCourseButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseButton;
    private javax.swing.JButton addCourseButton1;
    private javax.swing.JButton addCourseButton2;
    private javax.swing.JButton deleteUserButton;
    private javax.swing.JButton dropCourseButton;
    private javax.swing.JButton editUserButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JTable usersTable;
    private javax.swing.JButton viewRegistrationsButton;
    private javax.swing.JButton viewRegistrationsButton1;
    private javax.swing.JTable yourCourseTable;
    // End of variables declaration//GEN-END:variables
}
